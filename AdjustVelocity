local Players = game:GetService("Players")
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

local character = script.Parent

local helper = character.HumanoidRootPart:WaitForChild("Helper")

local lastHitObject = nil
local lastFloorMaterial = nil

local onGroundLastFrame

local function IsPlayerAirborne()
	local floorMaterial = player.Character.Humanoid.FloorMaterial
	return floorMaterial == nil or floorMaterial == Enum.Material.Air
end

helper.Touched:connect(function(hitObject)
	lastHitObject = hitObject
end)

local function CalculateNewVelocity()
	local v = lastHitObject.AssemblyLinearVelocity
	local c = character:WaitForChild("HumanoidRootPart").AssemblyLinearVelocity
	local newVelocity = v
	if v.X == 0 then
		newVelocity = Vector3.new(c.X, newVelocity.Y, newVelocity.Z)
	end
	if v.Z == 0 then
		newVelocity = Vector3.new(newVelocity.X, newVelocity.Y, c.Z)
	end
	return Vector3.new(newVelocity.X, c.Y, newVelocity.Z)
end

RunService.RenderStepped:Connect(function(deltaTime)
	if lastHitObject ~= nil and IsPlayerAirborne() then
		-- Do stuff to match momentum
		local newVelocity = CalculateNewVelocity()
		character.HumanoidRootPart.AssemblyLinearVelocity = newVelocity
	end
end)
