local Players = game:GetService("Players")
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

local character = script.Parent

local helper = character.HumanoidRootPart:WaitForChild("Helper")

local lastHitObject = nil
local lastFloorMaterial = nil
local lastGroundVelocity = Vector3.zero

local airControl = 0.75
if script:GetAttribute("AirControl") ~= nil then
	airControl = script:GetAttribute("AirControl")
end

local function IsPlayerAirborne()
	local floorMaterial = player.Character.Humanoid.FloorMaterial
	return floorMaterial == nil or floorMaterial == Enum.Material.Air
end

helper.Touched:connect(function(hitObject)
	lastHitObject = hitObject
	lastGroundVelocity = Vector3.zero
end)

local function CalculateNewVelocity()
	local v = lastHitObject.AssemblyLinearVelocity
	local c = character:WaitForChild("HumanoidRootPart").AssemblyLinearVelocity
	local newVelocity = v

	return Vector3.new(newVelocity.X + lastGroundVelocity.X, c.Y, newVelocity.Z + lastGroundVelocity.Z)
end

RunService.RenderStepped:Connect(function(deltaTime)
	if lastHitObject ~= nil and IsPlayerAirborne() then
		local newVelocity = CalculateNewVelocity()
		character.HumanoidRootPart.AssemblyLinearVelocity = newVelocity
	end
	if not IsPlayerAirborne() then
		lastGroundVelocity = player.Character.HumanoidRootPart.AssemblyLinearVelocity * airControl
	end
end)
